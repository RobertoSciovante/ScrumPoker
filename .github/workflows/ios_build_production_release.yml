name: iOS Step 1 - build production-release

on:
  workflow_dispatch:

jobs:
  build_ios:
    name: ios build production-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Apple Certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64_DEVELOPMENT_APPLE }}
          p12-password: ${{ secrets.P12_PASSWORD_DEVELOPMENT_APPLE }}

      - name: Install the provisioning profile
        env:
          PROVISIONING_CERTIFICATE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_DEVELOPMENT_BASE64_APPLE }}
        run: |
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          echo -n "$PROVISIONING_CERTIFICATE_BASE64" | base64 --decode --output $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.1'
#          architecture: x64

      - run: flutter pub get
      #      - run: flutter test
      - run: flutter build ios --release --no-codesign --flavor development -t lib/main_development.dart


      - name: Build resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

      - name: Build xArchive
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release DEVELOPMENT_TEAM=YOUR_TEAM_ID -sdk 'iphoneos' -destination 'generic/platform=iOS' -archivePath build-output/app.xcarchive PROVISIONING_PROFILE=YOUR_UUID clean archive CODE_SIGN_IDENTITY="Apple Distribution: Damien Aicheh"

      - name: Upload APP
        uses: actions/upload-artifact@v1
        with:
          name: release-ios
          path: build-output/ios

    #        with:
#          name: ios-development-debug.app
#          path: build/ios/iphoneos/Runner.app
