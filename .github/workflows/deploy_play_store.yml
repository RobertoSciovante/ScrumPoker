name: Deploy to Play Store V.008

on:
  workflow_dispatch:
#  push:
#    branches:
#      - master

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Generate Release APK
#        run: ./gradlew assembleRelease
#      - name: Sign APK
#        uses: r0adkll/sign-android-release@v1
#        # ID used to access action output
#        id: sign_app
#        with:
#          releaseDirectory: app/build/outputs/apk/release
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          alias: ${{ secrets.ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#      - uses: actions/upload-artifact@master
#        with:
#          name: release.apk
#          path: ${{steps.sign_app.outputs.signedReleaseFile}}
#      - uses: actions/upload-artifact@master
#        with:
#          name: mapping.txt
#          path: app/build/outputs/mapping/release/mapping.txt

  deploy-play-store:
#    needs: [build]
    runs-on: ubuntu-latest
    steps:
      # 1
#       - name: Download artifact
#         uses: dawidd6/action-download-artifact@v2
#         with:
#           workflow: build_appbundle_production_release.yml
#           name: android-production-release.aab
#           path: ./android/
#      - uses: actions/download-artifact@master
#        with:
#          name: android-production-release.aab
#      - uses: actions/download-artifact@master
#        with:
#          name: mapping.txt
#       - name: "Check file existence"
#         uses: andstor/file-existence-action@v1
#         with:
#           files: "android-production-release.aab"
#       - name: "Check file existence"
#         uses: andstor/file-existence-action@v1
#         with:
#           files: "./android-production-release.aab"
#       - name: "Check file existence"
#         uses: andstor/file-existence-action@v1
#         with:
#           files: " build/app/outputs/bundle/productionRelease/app-production-release.aab"

#       # 2
#       - name: Publish to Play Store internal test track
#         uses: r0adkll/upload-google-play@v1
#         with:
#           serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
#           # 3
#           packageName: com.startingfinace.scrumpoker
#           releaseFile: ./android-production-release.aab
# #           releaseFile: build/app/outputs/bundle/productionRelease/app-production-release.aab
#           track: internal
#           userFraction: 0.50
# #          mappingFile: mapping.txt
#       - name: Echo
#         run: echo 'Ciao mondo 002'
#       - name: Create file
#         run: echo 'Ciao mondo' > ciao_mondo.aab
#   list:
#     needs: [deploy-play-store]
#     name: Path lister
#     runs-on: ubuntu-latest
#     steps:
      - name: Echo
        run: echo 'File list aab direct'
         
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"

      - uses: actions/checkout@v1

      - name: Fetch action
        id: pl
        uses: Rishabh510/Path-lister-action@master
        with:
          path: "./"
#           type: ".aab"

      - name: Output results
        run: |
          echo "Found ${{ steps.pl.outputs.path_count }} file(s) with this extension:"
          for i in ${{ steps.pl.outputs.paths }}; do
          echo $i
          done
          
